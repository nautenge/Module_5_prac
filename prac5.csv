using System;

public interface IDocument{
    void Open();
}

public class Report : IDocument{
    public void Open(){
        Console.WriteLine("Открытие отчета.");
    }
}

public class Resume : IDocument{
    public void Open(){
        Console.WriteLine("Открытие резюме.");
    }
}

public class Letter : IDocument{
    public void Open(){
        Console.WriteLine("Открытие письма.");
    }
}

public class Invoice : IDocument{
    public void Open(){
        Console.WriteLine("Открытие счета.");
    }
}

public abstract class DocumentCreator{
    public abstract IDocument CreateDocument();
}

public class ReportCreator : DocumentCreator
{
    public override IDocument CreateDocument(){
        return new Report();
    }
}

public class ResumeCreator : DocumentCreator
{
    public override IDocument CreateDocument(){
        return new Resume();
    }
}

public class LetterCreator : DocumentCreator
{
    public override IDocument CreateDocument(){
        return new Letter();
    }
}

public class InvoiceCreator : DocumentCreator
{
    public override IDocument CreateDocument(){
        return new Invoice();
    }
}

public class Program
{
    public static void Main(string[] args)
    {
        DocumentCreator creator = null;
        Console.WriteLine("Выберите тип документа: Report, Resume, Letter, Invoice");

        string choice = Console.ReadLine().ToLower();

        switch (choice)
        {
            case "report":
                creator = new ReportCreator();
                break;
            case "resume":
                creator = new ResumeCreator();
                break;
            case "letter":
                creator = new LetterCreator();
                break;
            case "invoice":
                creator = new InvoiceCreator();
                break;
            default:
                Console.WriteLine("Неверный выбор.");
                return;
        }

        IDocument document = creator.CreateDocument();
        document.Open();
    }
}
